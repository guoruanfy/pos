/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OperatorAdminDialog.java
 *
 * Created on 2011-9-26, 11:39:54
 */
package pos;

import java.awt.event.KeyEvent;
import org.jdesktop.application.Action;

/**
 *
 * @author fangyuan01
 */
public class OperatorAdminDialog extends javax.swing.JDialog {

    /** Creates new form OperatorAdminDialog */
    public OperatorAdminDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordTF = new javax.swing.JPasswordField();
        authorCB = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(449, 318));
        setName("Form"); // NOI18N
        setResizable(false);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(pos.POSApp.class).getContext().getResourceMap(OperatorAdminDialog.class);
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        nameTF.setText(resourceMap.getString("nameTF.text")); // NOI18N
        nameTF.setName("nameTF"); // NOI18N
        nameTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchUser(evt);
            }
        });
        nameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                monitorEnter(evt);
            }
        });

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        passwordTF.setText(resourceMap.getString("passwordTF.text")); // NOI18N
        passwordTF.setName("passwordTF"); // NOI18N

        authorCB.setFont(resourceMap.getFont("authorCB.font")); // NOI18N
        authorCB.setText(resourceMap.getString("authorCB.text")); // NOI18N
        authorCB.setName("authorCB"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(pos.POSApp.class).getContext().getActionMap(OperatorAdminDialog.class, this);
        jButton1.setAction(actionMap.get("deleteUser")); // NOI18N
        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jButton2.setAction(actionMap.get("createUser")); // NOI18N
        jButton2.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jButton3.setAction(actionMap.get("cancel")); // NOI18N
        jButton3.setFont(resourceMap.getFont("jButton3.font")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(authorCB)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton3)
                                    .addGap(22, 22, 22))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(nameTF)
                                        .addComponent(passwordTF, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel3)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(authorCB)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//    当焦点离开姓名输入框的时候
private void searchUser(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchUser
// TODO add your handling code here:
    setFieldByName(nameTF.getText());
}//GEN-LAST:event_searchUser

private void monitorEnter(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_monitorEnter
// TODO add your handling code here:
    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        setFieldByName(nameTF.getText());
    }
}//GEN-LAST:event_monitorEnter

private void setFieldByName(String name) {
    if(!POSUtils.isNull(name)) {
        User user = db.getUserByName(name);
        if(user != null){
            setFieldsByUser(user);
        } else {
            resetFieldsExceptName();
        }
    } else {
        resetFieldsExceptName();
    }
}

private void setFieldsByUser(User user) {
    this.nameTF.setText(user.getName());
    this.passwordTF.setText(user.getPassword());
    this.authorCB.setSelected(POSUtils.justifyAdmin(user.getRole()));
}

private void resetFieldsExceptName() {
    this.passwordTF.setText("");
    this.authorCB.setSelected(false);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OperatorAdminDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OperatorAdminDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OperatorAdminDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OperatorAdminDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                OperatorAdminDialog dialog = new OperatorAdminDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

//    删除
    @Action
    public void deleteUser() {
//        自己无法删除自己
        String name = nameTF.getText();
        if(!POSUtils.isNull(name)) {
            if(POSUtils.currentOperator.equals(this.nameTF.getText())) {
                POSUtils.showTips("自己不能删除自己！");
            } else {
                if(db.hasUserByName(name)) {
                    db.deleteUser(name);
                    resetFieldsExceptName();
                    this.nameTF.setText("");
                    POSUtils.showTips("指定操作人员删除成功！");
                } else {
                    POSUtils.showTips("指定操作人员已经不存在！");
                }
            }
        } else {
            POSUtils.showTips("请输入要删除的操作人员姓名！");
        }
    }

//    创建
    @Action
    public void createUser() {
         String name = nameTF.getText();
         String password = passwordTF.getText();
         boolean author = false;
         if(authorCB.isSelected()) {
             author = true;
         }
         
//         如果用户名已经存在则进行修改
         if(db.hasUserByName(name)) {
             db.updateUserByName(name, password, POSUtils.getRoleFromBool(author));
              POSUtils.showTips("操作人员信息修改成功！");
         } else {
//             否则添加新的用户
             if(POSUtils.isNull(name)) {
                 POSUtils.showTips("操作人员姓名不能为空！");
             } else if(POSUtils.isNull(password)) {
                 POSUtils.showTips("操作人员姓名密码不能为空！");
             } else {
                 db.createUser(name, password, POSUtils.getRoleFromBool(author));
                  POSUtils.showTips("成功添加新的操作人员！");
             }
         }
         
    }

//    取消
    @Action
    public void cancel() {
        this.dispose();
    }
    
    
    private DB db = new DB();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox authorCB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField nameTF;
    private javax.swing.JPasswordField passwordTF;
    // End of variables declaration//GEN-END:variables
}
